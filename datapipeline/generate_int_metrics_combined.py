# this script should be run whenever there is a change to the metrics folder, so it can generate the
# int_metrics_merged model

import os
import datetime

def find_models(metrics):
    models = []
    for m in os.listdir(metrics):
        if m.endswith('.sql'):
            models.append(m.replace('.sql',''))
    return models

def produce_template(models):
    x = '''{{
    config(
        materialized="table",
        partition_by={
            "field": "upload_timestamp",
            "data_type": "datestamp",
            "granularity": "day",
        },
        tags=["metric","okta"]
    )
}}

-- Do not edit this file directly.  It is being populatd by generate_int_metrics_combined.  If you need to change this model,
-- head on over to the root of the folder and modify the python script instead

'''

    x += f'-- Updated on { datetime.datetime.now(datetime.timezone.utc).strftime('%Y-%m-%d %H:%M:%S') }\n\n'

    for i,model in enumerate(models):
        print(f" - {model}")
        x += f"select metric_id,resource,compliance,detail,upload_timestamp, cast(upload_timestamp as date) as upload_date, {{{{ current_timestamp() }}}} as etl_timestamp from {{{{ ref('{model}') }}}}"
        if i + 1 < len(models):
            x += " UNION ALL\n"
        else:
            x += "\n"

    return x

models = find_models('models/metrics')

out = produce_template(models)

with open('models/intermediate/int_metrics_combined.sql','wt') as q:
    q.write(out)
